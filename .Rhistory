?gl
?list
?gl
swirl()
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","weight","bp","rating","test")
cnames <- c("patient","age",weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSe
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !== 7
!(5 == 7)
info()
!5 == 7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSe)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 >3.9
isTRUE(6>4)
identical( 'twins','twins')
xor(5==6,!FALSE)
ints <-sample(10)
ints
ints > 5
which(ints[ints > 7])
which(int >7)
which(ints >7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
info()
play()
flags[flags$saltires != 0]
flags[saltires != 0]
flags$saltires
flags[,flags$saltires = 1]
flags[,flags$saltires == 1]
flags[,flags$saltires]
flags[flags$saltires == 1,"saltires"]
flags[flags$saltires == 1]
flags[flags$saltires == 1,flags$name]
flags[flags$saltires == 1,"name""]
flags[flags$saltires == 1,"name"]
swirl()
exit
0
info()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
info()
nxt()
nxt()
nxt()
nxt()
skip()
skip()
skip()
skip()
skip()
env
sys.getenv
sys.getenv(0)
sys.getenv()
??variables
skip()
skip()
skip()
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
?lapply
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect <-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class, character(1))
>tapply
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
q()
library(dataset)
library(datasets)
data(iris)
?iris
head(iris)
colMeans(iris$Sepal.Length)
mean(iris$Sepal.Length)
?apply
mean(iris$Sepal.Length)
mean(iris$Sepal.Width)
mean(iris$Petal.Length)
mean(iris$Petal.Width)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
apply(iris,1,mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg,mtcars$cyl,mean)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$hp,mtcars$cyl,mean)
class(tapply(mtcars$hp,mtcars$cyl,mean))
a <- tapply(mtcars$hp,mtcars$cyl,mean)
a[1]
a[1,1]
a[3]-a[1]
a <- tapply(mtcars$hp,mtcars$cyl=8,mean)-tapply(mtcars$hp,mtcars$cyl=4,mean)
tapply(mtcars$hp,mtcars$cyl=8,mean)-tapply(mtcars$hp,mtcars$cyl=4,mean)
209.21429-82.63636
debug(ls)
ls
library(datasets)
data(iris)
head(iris)
tapply(iris$Sepal.Length,iris$Species)
tapply(iris$Sepal.Length,iris$Species, mean)
data(mtcars)
tapply(mtcars$cyl,mtcars$hp,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
209.21429-82.63636
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
q()
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
exit
swirl()
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100,prob = 0.7)
flips2 <- rbinom(100,size = 1,prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd = 25)
rpois(5,mean=10)
?rpois
rpois(1:5)
rpois(1:5,lambda = 10)
info()
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units = "days")
q()
w<-getwd()
setwd(paste(w,"/GetandCleanData/GaCDcoursera/"))
setwd(paste(w,"/GetandCleanData/GaCDcoursera/",sep=""))
getwd()
quiz1_1_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(quiz1_1_url,destfile="./Idaho1.csv")
quiz1_1 <- read.csv("Idaho1.csv")
head(quiz1_1)
head(quiz1_1$VAL)
rich <- quiz1_1[quiz1_1$VAL=24]
rich <- quiz1_1[quiz1_1$VAL==24]
rich <- quiz1_1[quiz1_1$VAL==24,]
nrow(rich)
rich2 <- quiz1_1[quiz1_1$VAL>=23,]
nrow(rich2)
rich2 <- quiz1_1[quiz1_1$VAL==23,]
nrow(rich2)
rich
str(quiz1_1)
summary(quiz1_1)
summary(quiz1_1$VAL)
nrow(quiz1_1$VAL)
nrow(quiz1_1)
library(data.table)
DT <- data.table(quiz1_1)
DT[DT$VAL,max(VAL)]
DT[DT$VAL,min(VAL)]
is.na(quiz1_1$VAL)
noNA <- quiz1_1[quiz1_1$VAL != "NA",]
nona
noNA
nrow(noNa)
nrow(noNA)
noNA <- quiz1_1[quiz1_1$VAL != NA,]
nrow(noNA)
nrow(rich)
head(rich)
is.na(rich)
!is.na(rich)
head(quiz1_1[[VAL]])
head(quiz1_1$VAL)
which(quiz1_1$VAL == 24)
nrow(which(quiz1_1$VAL == 24))
rich<- quiz1_1[which(quiz1_1$VAL == 24),]
nrows(rich)
nrow(rich)
rich
head(quiz1_1$FES)
quiz1_3_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(quiz1_3_url,destfile="./NGAP.xlsx")
library(XLSX)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(rJava)
library("rJava")
library(xlsx)
NGAP <- read.xlsx("NGAP.xlsx")
NGAP <- read.table("NGAP.xlsx")
NGAP <- read.table("NGAP.xlsx",header=TRUE)
library(xlsx)
install.packages("rJava",.libPaths()[1],"http://www.rforge.net/")
install.packages("rJava",.libPaths()[1],"http://www.rforge.net/rJava/files/")
Sys.getenv("JAVA_HOME")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre7\\")
library(xlsx)
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre7\\bin\\client\\")
library(xlsx)
Sys.setenv(JAVA_HOME="")
library(xlsx)
R.Version()
library(xlsx)
NGAP <- read.xlsx("NGAP.xlsx",colIndex=c(7:15),rowIndex=c(18:23))
NGAP <- read.xlsx("NGAP.xlsx",sheetIndex=1,colIndex=c(7:15),rowIndex=c(18:23))
colindex<-2:3
colindex
colindex2<-c(2:3)
colindex2
colindex==colindex2
NGAP <- read.xlsx("NGAP.xlsx",sheetIndex=1,colIndex=c(7:15),rowIndex=c(18:23),mode="wp")
download.file(quiz1_3_url,destfile="./NGAP.xlsx",mode="wb")
NGAP <- read.xlsx("NGAP.xlsx",sheetIndex=1,colIndex=c(7:15),rowIndex=c(18:23))
NGAP <- read.xlsx("NGAP.xlsx",sheetIndex=1,colIndex=c(7:15),rowIndex=c(18:23),header=TRUE)
str(NGAP)
dat <- NGAP
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages(XML)
install.packages("XML")
library(xmL)
library(XML)
restURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(restURL,destfile="./Baltrest.xml")
rests <- xmlTreeParse(restURL,useInternal=T)
rests <- htmlTreeParse(restURL,useInternal=T)
rests
restURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
rests <- xmlTreeParse(restURL,useInternal=T)
rests
rests$Zip
rests[[Zip]]
rootNode <- xmlRoot(rests)
xmlname(rootNode)
xmlName(rootNode)
names(rootNode)
rootNode[[1[]]
rootNode[[1]]
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
xpathSApply(rootNode,"//zipcode",xmlValue)
zips <- xpathSApply(rootNode,"//zipcode",xmlValue)
which(zips==21231)
nrow(which(zips==21231))
stuff<- which(zips==21231)
nrow(stuff)
nrow(zips[which(zips==21231)])
ncol(which(zips==21231))
nelem(which(zips==21231))
which(zips==21231)
stuff<- which(zips==21231)
stuff
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
class(stuff)
stuff
stuff[1]
stuff[10]
length(stuff)
download.file(url,destfile="./ACS.csv")
DT <- fread("ACS.csv")
library(data.table)
System.time()
dystem.time()
system.time()
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean({DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
head(DT$SEX)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
time <- function() {tapply(DT$pwgtp15,DT$SEX,mean)
time <- function() {}
time <- function() {}
time <- function() {
replicate(1000,system.time(tapply(DT$pwgtp15,DT$SEX,mean)))
}
time
time()
time <- function() {
time <- function(FUN) {
replicate(1000,system.time(FUN))
}
time(tapply(DT$pwgtp15,DT$SEX,mean))
time <- function(FUN) {
times<-replicate(1000,system.time(FUN));
sum(times)
}
time(tapply(DT$pwgtp15,DT$SEX,mean))
times
system.time(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
time2<-system.time(tapply(DT$pwgtp15,DT$SEX,mean))
time2
time2[1]
time2[2]
time2[3]
time <- function(FUN) {
tmp<-replicate(1000,system.time(FUN));
sum(tmp[1])
}
time(tapply(DT$pwgtp15,DT$SEX,mean))
time(DT[,mean(pwgtp15),by=SEX])
time <- function(FUN) {
tmp<-replicate(1000,FUN);
}
system.time(time(tapply(DT$pwgtp15,DT$SEX,mean)))
time(tapply(DT$pwgtp15,DT$SEX,mean))
tmp
time(tapply(DT$pwgtp15,DT$SEX,mean))
time <- function(FUN) {
replicate(10000,FUN)
}
system.time(time(tapply(DT$pwgtp15,DT$SEX,mean)))
system.time(time(tapply(DT[,mean(pwgtp15),by=SEX])))
system.time(time(sapply(split(DT$pwgtp15,DT$SEX),mean)))
system.time(time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)))
system.time(time(mean(DT[DT$SEX==1,]$pwgtp15)))
system.time(time(mean(DT[DT$SEX==2,]$pwgtp15)))
